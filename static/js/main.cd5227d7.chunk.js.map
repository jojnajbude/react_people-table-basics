{"version":3,"sources":["components/PageNavLink.tsx","components/Navigation.tsx","pages/Home.tsx","pages/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleList/PeopleList.tsx","pages/People.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navigation","role","Home","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","slug","sex","name","PeopleList","peopleList","useParams","selectedSlug","map","person","born","died","fatherName","motherName","mother","father","People","useState","setPeopleList","loadingError","setLoadingError","isLoading","setIsLoading","getPeopleList","people","find","mom","fath","useEffect","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cd5227d7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        {\n          'has-background-grey-lighter': isActive,\n        },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink\n          to=\"../\"\n          text=\"Home\"\n        />\n        <PageNavLink\n          to=\"../people\"\n          text=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\n\nexport const Home: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { FC } from 'react';\n\nexport const PageNotFound: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  slug: string,\n  sex: string,\n  name: string,\n};\n\nexport const PersonLink: FC<Props> = ({ slug, sex, name }) => (\n  <Link\n    to={`/people/${slug}`}\n    className={classNames({\n      'has-text-danger': sex === 'f',\n    })}\n  >\n    {name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  peopleList: Person[],\n};\n\nexport const PeopleList: React.FC<Props> = ({\n  peopleList,\n}) => {\n  const { selectedSlug = 0 } = useParams();\n\n  return (\n    <tbody>\n      {peopleList.map(person => {\n        const {\n          name,\n          sex,\n          born,\n          died,\n          fatherName,\n          motherName,\n          mother,\n          father,\n          slug,\n        } = person;\n\n        return (\n          <tr\n            data-cy=\"person\"\n            key={slug}\n            className={classNames({\n              'has-background-warning': slug === selectedSlug,\n            })}\n          >\n            <td>\n              <PersonLink\n                slug={slug}\n                name={name}\n                sex={sex}\n              />\n            </td>\n\n            <td>{sex}</td>\n            <td>{born}</td>\n            <td>{died}</td>\n            <td>\n              {mother\n                ? (\n                  <PersonLink\n                    slug={mother.slug}\n                    name={mother.name}\n                    sex={mother.sex}\n                  />\n                )\n                : (motherName || '-')}\n            </td>\n            <td>\n              {father\n                ? (\n                  <PersonLink\n                    slug={father.slug}\n                    name={father.name}\n                    sex={father.sex}\n                  />\n                )\n                : (fatherName || '-')}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleList } from '../components/PeopleList';\nimport { Person } from '../types';\n\nexport const People: FC = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [loadingError, setLoadingError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getPeopleList = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await getPeople();\n\n      const people = response.map(person => {\n        const mother = response.find(mom => mom.name === person.motherName);\n        const father = response.find(fath => fath.name === person.fatherName);\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeopleList(people);\n    } catch {\n      setLoadingError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getPeopleList();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {loadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(peopleList.length === 0 && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {(!isLoading && peopleList.length > 0) && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <PeopleList\n                peopleList={peopleList}\n              />\n\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { Home } from './pages/Home';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { People } from './pages/People';\n\nexport const App: FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<People />} />\n              <Route path=\":selectedSlug\" element={<People />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<PageNotFound />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}